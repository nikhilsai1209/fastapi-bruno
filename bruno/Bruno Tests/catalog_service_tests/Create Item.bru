meta {
  name: Create Item
  type: http
  seq: 1
}

post {
  url: http://localhost:8000/items/
  body: json
  auth: none
}

body:json {
  {
    "name": "Sample Item",
    "description": "This is a sample description.",
    "price": 150
  }
  
}

assert {
  res.status: eq 201
  typeof res.body: eq 	"object"
  res.body.hasOwnProperty('id'): eq true
  res.body.name: eq 	"Sample Item"
  res.body.price: gt 0
}

tests {
  test("status code test", function() {
    expect(res.getStatus()).to.equal(201); // Ensures the response status code is 201
  });
  
  test("name data type test", function() {
    const data = res.getBody();
    expect(data.name).to.be.a('string'); // Ensures 'name' is a string
  });
  
  test("name value test", function() {
    const data = res.getBody();
    expect(data.name).to.equal("Sample Item"); // Checks if 'name' matches the value sent
  });
  
  test("description value test", function() {
    const data = res.getBody();
    expect(data.description).to.equal("This is a sample description."); // Verifies description
  });
  
  test("price value test", function() {
    const data = res.getBody();
    expect(data.price).to.equal(150); // Validates price value
  });
  
  
  
}
