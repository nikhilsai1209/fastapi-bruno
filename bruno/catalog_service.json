{
    "name": "Catalog Service Tests",
    "baseUrl": "http://127.0.0.1:8000",
    "endpoints": [
      {
        "name": "Create Item",
        "method": "POST",
        "route": "/items/",
        "payload": {
          "name": "Test Item",
          "description": "Test Description",
          "price": 100.0
        },
        "testCases": [
          {
            "description": "Create a new item successfully",
            "expectedStatus": 201,
            "expectedResponse": {
              "name": "Test Item",
              "description": "Test Description",
              "price": 100.0
            }
          }
        ]
      },
      {
        "name": "Get Item by ID",
        "method": "GET",
        "route": "/items/{item_id}",
        "routeParams": {
          "item_id": "66cef8f7f86225e37353d8c2"
        },
        "testCases": [
          {
            "description": "Get an item by ID successfully",
            "expectedStatus": 200,
            "expectedResponse": {
              "id": "66cef8f7f86225e37353d8c2",
              "name": "Test Item",
              "description": "Test Description",
              "price": 100.0
            }
          },
          {
            "description": "Invalid ObjectId format",
            "routeParams": {
              "item_id": "invalidId"
            },
            "expectedStatus": 400,
            "expectedResponse": {
              "detail": "Invalid ObjectId format"
            }
          }
        ]
      },
      {
        "name": "Get Item by Name",
        "method": "GET",
        "route": "/items/",
        "queryParams": {
          "name": "Test Item"
        },
        "testCases": [
          {
            "description": "Get an item by name successfully",
            "expectedStatus": 200,
            "expectedResponse": {
              "id": "66cef8f7f86225e37353d8c2",
              "name": "Test Item",
              "description": "Test Description",
              "price": 100.0
            }
          },
          {
            "description": "Item not found",
            "queryParams": {
              "name": "NonExistentItem"
            },
            "expectedStatus": 404,
            "expectedResponse": {
              "detail": "Item not found"
            }
          }
        ]
      },
      {
        "name": "Update Item by Name",
        "method": "PUT",
        "route": "/items/name/{item_name}",
        "routeParams": {
          "item_name": "Test Item"
        },
        "payload": {
          "name": "Updated Item",
          "description": "Updated Description",
          "price": 150.0
        },
        "testCases": [
          {
            "description": "Update item successfully",
            "expectedStatus": 200,
            "expectedResponse": {
              "id": "66cef8f7f86225e37353d8c2",
              "name": "Updated Item",
              "description": "Updated Description",
              "price": 150.0
            }
          },
          {
            "description": "Item not found",
            "routeParams": {
              "item_name": "NonExistentItem"
            },
            "expectedStatus": 404,
            "expectedResponse": {
              "detail": "Item not found"
            }
          }
        ]
      },
      {
        "name": "Delete Item by Name",
        "method": "DELETE",
        "route": "/items/name/{item_name}",
        "routeParams": {
          "item_name": "Test Item"
        },
        "testCases": [
          {
            "description": "Delete item successfully",
            "expectedStatus": 200,
            "expectedResponse": {
              "message": "Item deleted successfully"
            }
          },
          {
            "description": "Item not found",
            "routeParams": {
              "item_name": "NonExistentItem"
            },
            "expectedStatus": 404,
            "expectedResponse": {
              "detail": "Item not found"
            }
          }
        ]
      }
    ]
  }
  